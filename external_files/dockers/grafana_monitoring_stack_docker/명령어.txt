[모니터링 툴 실행 가이드]

1. prometheus.yml 에 actuator 요청을 보낼 주소를 입력합니다.
    그리고 prometheus 가 실행되는 위치의 IP 주소를 서버 프로젝트의 application.yml 안의 custom-config.actuatorAllowIpList 와 custom-config.loggingDenyIpList 에 입력하여
    로그 제외 및 actuator 접근을 허용해주고 서버를 다시 실행시켜줍니다.

2. 도커 컨테이너를 실행시킵니다.
    >> docker-compose -f docker-compose.yml up -d

3. 도커가 실행되면 prometheus 가 실행되며 해당 서버에 요청을 지속적으로 보낼 것입니다.
    prometheus 의 실행 상태를 확인하려면,

    http://127.0.0.1:9090/graph
    에 접속하여 logback_events_total 를 Search 하여 메트릭 정보를 조회할 수 있고,

    http://127.0.0.1:9090/targets
    에 접속하여 host 로 작성했던 EndPoint 와 서버의 상태를 확인해 볼 수 있습니다.

4. prometheus 가 얻어오는 정보를 보다 보기 좋은 형태로 가공하여 제공해주는 Grafana 역시 동작중인데,
    http://127.0.0.1:3000
    위와 같이 접속합시다.

    초기 아이디와 비밀번호는 모두 admin 인데,
    입력 후에 admin 아이디의 비밀번호를 설정해줍시다.

    홈 화면에서 Basic 부분의 DATA SOURCES 를 클릭합니다.

    모니터링 소스 엔진을 고르는 것으로, 앞서 실행시킨 Prometheus 를 선택합니다.
    Connection 에는 Prometheus 접속 주소를 입력하는데,

    http://prometheus:9090

    같은 도커 내에서 실행시켰으므로 위와 같이 작성하면 됩니다.

    입력하고 바로 Save & test 버튼을 누르고,

    building a dashboard 링크를 누르거나,
    Dashboards 탭에 이동하여, Create Dashboard 버튼 -> Import a dashboard 를 누릅니다.

    여기서는 미리 만들어진 대시보드 스타일을 가져와서 사용하는 것으로,

    https://grafana.com/grafana/dashboards/

    위 링크에서 대시보드를 검색하여 사용할 것인데,

    Springboot 프로젝트용 대시보드를 사용할 것이므로,
    Springboot 로 검색한 뒤, 마음에 드는 대시보드를 선택한 후,

    우측의 대시보드 아이디 복사 버튼을 누르고,

    Grafana 대시보드 설정 화면에서 Find and import dashboards for... 아래의 입력창에 붙여넣어 Load 를 누르면 대시보드 설정 창이 나오고,
    가장 아래 드롭다운 버튼에서 Prometheus 를 선택한 후 Import 를 누르면 됩니다.

- Loki 설정을 해겠습니다.
    Datasource 에서 Add Data source 를 누르고, Loki 를 선택합니다.

    이번에는

    http://loki:3100

    위와 같이 loki 주소를 입력하고 Save & test 버튼을 눌러 이상이 없으면 됩니다.

    Loki 데이터 소스의 데이터를 확인할 대시보드를 작성하려면,

    building a dashboard 링크를 누르거나,
    Dashboards 탭에 이동하여, Create Dashboard 버튼 -> Add visualization 을 누릅니다.

    Loki 를 선택하고,
    쿼리 설정 부분에서 Label filters 에서 선택하면 됩니다.(잘 설정되었다면 클릭하면 선택 메뉴가 나타납니다.)